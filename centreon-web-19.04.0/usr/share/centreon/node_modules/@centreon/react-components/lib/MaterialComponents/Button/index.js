"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@material-ui/core/styles");

var _Button = _interopRequireDefault(require("@material-ui/core/Button"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var styles = function styles(theme) {
  return {
    button: {
      margin: theme.spacing.unit
    },
    input: {
      display: 'none'
    }
  };
};

function ContainedButtons(props) {
  var classes = props.classes;
  return _react.default.createElement("div", null, _react.default.createElement(_Button.default, {
    variant: "contained",
    className: classes.button
  }, "Default"), _react.default.createElement(_Button.default, {
    variant: "contained",
    color: "primary",
    className: classes.button
  }, "Primary"), _react.default.createElement(_Button.default, {
    variant: "contained",
    color: "secondary",
    className: classes.button
  }, "Secondary"), _react.default.createElement(_Button.default, {
    variant: "contained",
    color: "secondary",
    disabled: true,
    className: classes.button
  }, "Disabled"), _react.default.createElement(_Button.default, {
    variant: "contained",
    href: "#contained-buttons",
    className: classes.button
  }, "Link"), _react.default.createElement("input", {
    accept: "image/*",
    className: classes.input,
    id: "contained-button-file",
    multiple: true,
    type: "file"
  }), _react.default.createElement("label", {
    htmlFor: "contained-button-file"
  }, _react.default.createElement(_Button.default, {
    variant: "contained",
    component: "span",
    className: classes.button
  }, "Upload")));
}

ContainedButtons.propTypes = {
  classes: _propTypes.default.object.isRequired
};

var _default = (0, _styles.withStyles)(styles)(ContainedButtons);

exports.default = _default;