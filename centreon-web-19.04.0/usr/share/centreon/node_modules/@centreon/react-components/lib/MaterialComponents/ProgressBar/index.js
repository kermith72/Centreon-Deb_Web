"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@material-ui/core/styles");

var _Stepper = _interopRequireDefault(require("@material-ui/core/Stepper"));

var _Step = _interopRequireDefault(require("@material-ui/core/Step"));

var _StepButton = _interopRequireDefault(require("@material-ui/core/StepButton"));

var _Button = _interopRequireDefault(require("@material-ui/core/Button"));

var _Typography = _interopRequireDefault(require("@material-ui/core/Typography"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var styles = function styles(theme) {
  return {
    root: {
      width: '90%'
    },
    button: {
      marginRight: theme.spacing.unit
    },
    completed: {
      display: 'inline-block'
    },
    instructions: {
      marginTop: theme.spacing.unit,
      marginBottom: theme.spacing.unit
    }
  };
};

function getSteps() {
  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];
}

function getStepContent(step) {
  switch (step) {
    case 0:
      return 'Step 1: Select campaign settings...';

    case 1:
      return 'Step 2: What is an ad group anyways?';

    case 2:
      return 'Step 3: This is the bit I really care about!';

    default:
      return 'Unknown step';
  }
}

var HorizontalNonLinearStepper =
/*#__PURE__*/
function (_React$Component) {
  _inherits(HorizontalNonLinearStepper, _React$Component);

  function HorizontalNonLinearStepper() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, HorizontalNonLinearStepper);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HorizontalNonLinearStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "state", {
      activeStep: 0,
      completed: {}
    });

    _defineProperty(_assertThisInitialized(_this), "totalSteps", function () {
      return getSteps().length;
    });

    _defineProperty(_assertThisInitialized(_this), "handleNext", function () {
      var activeStep;

      if (_this.isLastStep() && !_this.allStepsCompleted()) {
        // It's the last step, but not all steps have been completed,
        // find the first step that has been completed
        var steps = getSteps();
        activeStep = steps.findIndex(function (step, i) {
          return !(i in _this.state.completed);
        });
      } else {
        activeStep = _this.state.activeStep + 1;
      }

      _this.setState({
        activeStep: activeStep
      });
    });

    _defineProperty(_assertThisInitialized(_this), "handleBack", function () {
      _this.setState(function (state) {
        return {
          activeStep: state.activeStep - 1
        };
      });
    });

    _defineProperty(_assertThisInitialized(_this), "handleStep", function (step) {
      return function () {
        _this.setState({
          activeStep: step
        });
      };
    });

    _defineProperty(_assertThisInitialized(_this), "handleComplete", function () {
      var completed = _this.state.completed;
      completed[_this.state.activeStep] = true;

      _this.setState({
        completed: completed
      });

      _this.handleNext();
    });

    _defineProperty(_assertThisInitialized(_this), "handleReset", function () {
      _this.setState({
        activeStep: 0,
        completed: {}
      });
    });

    return _this;
  }

  _createClass(HorizontalNonLinearStepper, [{
    key: "completedSteps",
    value: function completedSteps() {
      return Object.keys(this.state.completed).length;
    }
  }, {
    key: "isLastStep",
    value: function isLastStep() {
      return this.state.activeStep === this.totalSteps() - 1;
    }
  }, {
    key: "allStepsCompleted",
    value: function allStepsCompleted() {
      return this.completedSteps() === this.totalSteps();
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var classes = this.props.classes;
      var steps = getSteps();
      var activeStep = this.state.activeStep;
      return _react.default.createElement("div", {
        className: classes.root
      }, _react.default.createElement(_Stepper.default, {
        nonLinear: true,
        activeStep: activeStep
      }, steps.map(function (label, index) {
        return _react.default.createElement(_Step.default, {
          key: label
        }, _react.default.createElement(_StepButton.default, {
          onClick: _this2.handleStep(index),
          completed: _this2.state.completed[index]
        }, label));
      })), _react.default.createElement("div", null, this.allStepsCompleted() ? _react.default.createElement("div", null, _react.default.createElement(_Typography.default, {
        className: classes.instructions
      }, "All steps completed - you're finished"), _react.default.createElement(_Button.default, {
        onClick: this.handleReset
      }, "Reset")) : _react.default.createElement("div", null, _react.default.createElement(_Typography.default, {
        className: classes.instructions
      }, getStepContent(activeStep)), _react.default.createElement("div", null, _react.default.createElement(_Button.default, {
        disabled: activeStep === 0,
        onClick: this.handleBack,
        className: classes.button
      }, "Back"), _react.default.createElement(_Button.default, {
        variant: "contained",
        color: "primary",
        onClick: this.handleNext,
        className: classes.button
      }, "Next"), activeStep !== steps.length && (this.state.completed[this.state.activeStep] ? _react.default.createElement(_Typography.default, {
        variant: "caption",
        className: classes.completed
      }, "Step ", activeStep + 1, " already completed") : _react.default.createElement(_Button.default, {
        variant: "contained",
        color: "primary",
        onClick: this.handleComplete
      }, this.completedSteps() === this.totalSteps() - 1 ? 'Finish' : 'Complete Step'))))));
    }
  }]);

  return HorizontalNonLinearStepper;
}(_react.default.Component);

HorizontalNonLinearStepper.propTypes = {
  classes: _propTypes.default.object
};

var _default = (0, _styles.withStyles)(styles)(HorizontalNonLinearStepper);

exports.default = _default;