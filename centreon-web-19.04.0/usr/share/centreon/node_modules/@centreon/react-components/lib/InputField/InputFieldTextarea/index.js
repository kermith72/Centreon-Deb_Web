"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _textarea = _interopRequireDefault(require("./textarea.scss"));

var _IconInfo = _interopRequireDefault(require("../../Icon/IconInfo"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var InputFieldTextarea = function InputFieldTextarea(_ref) {
  var error = _ref.error,
      label = _ref.label,
      textareaType = _ref.textareaType,
      iconName = _ref.iconName,
      iconColor = _ref.iconColor,
      rest = _objectWithoutProperties(_ref, ["error", "label", "textareaType", "iconName", "iconColor"]);

  return _react.default.createElement("div", {
    className: (0, _classnames.default)(_textarea.default["form-group"], _textarea.default.textarea, _textarea.default[textareaType ? textareaType : ''], error ? _textarea.default['has-danger'] : '')
  }, label && _react.default.createElement("label", null, iconName ? _react.default.createElement(_IconInfo.default, {
    iconName: iconName,
    iconColor: iconColor
  }) : null, " ", label, " "), _react.default.createElement("textarea", _extends({
    className: (0, _classnames.default)(_textarea.default["form-control"]),
    rows: "3"
  }, rest)), error ? _react.default.createElement("div", {
    className: (0, _classnames.default)(_textarea.default["form-error"])
  }, error) : null);
};

var _default = InputFieldTextarea;
exports.default = _default;