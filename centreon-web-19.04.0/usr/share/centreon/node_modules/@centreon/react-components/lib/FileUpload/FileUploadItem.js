"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _fileUpload = _interopRequireDefault(require("./file-upload.scss"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var FileUploadItem =
/*#__PURE__*/
function (_Component) {
  _inherits(FileUploadItem, _Component);

  function FileUploadItem() {
    _classCallCheck(this, FileUploadItem);

    return _possibleConstructorReturn(this, _getPrototypeOf(FileUploadItem).apply(this, arguments));
  }

  _createClass(FileUploadItem, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          icon = _this$props.icon,
          iconStatus = _this$props.iconStatus,
          title = _this$props.title,
          titleStatus = _this$props.titleStatus,
          info = _this$props.info,
          infoStatus = _this$props.infoStatus,
          infoStatusLabel = _this$props.infoStatusLabel,
          progressBar = _this$props.progressBar,
          progressPercentage = _this$props.progressPercentage,
          uploading = _this$props.uploading,
          message = _this$props.message,
          onDeleteFile = _this$props.onDeleteFile;
      var cnFileUploadIcon = (0, _classnames.default)(_fileUpload.default["file-upload-item-icon"], _fileUpload.default[icon ? icon : ''], _fileUpload.default[iconStatus ? iconStatus : '']);
      var cnFileUploadTitle = (0, _classnames.default)(_fileUpload.default["file-upload-item-title"], _fileUpload.default[titleStatus ? titleStatus : '']);
      var cnFileUploadInfo = (0, _classnames.default)(_fileUpload.default["file-upload-item-info"], _fileUpload.default[infoStatus ? infoStatus : '']);
      return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement("div", {
        className: (0, _classnames.default)(_fileUpload.default["file-upload-item"])
      }, icon ? _react.default.createElement("span", {
        className: cnFileUploadIcon
      }) : null, _react.default.createElement("span", {
        className: cnFileUploadTitle
      }, title), info ? _react.default.createElement("span", {
        className: cnFileUploadInfo
      }, infoStatusLabel, info) : null, !uploading ? _react.default.createElement("span", {
        className: (0, _classnames.default)(_fileUpload.default["icon-close"], _fileUpload.default["icon-close-small"]),
        onClick: onDeleteFile
      }) : null, _react.default.createElement("div", {
        className: (0, _classnames.default)(_fileUpload.default["progress"])
      }, _react.default.createElement("span", {
        className: (0, _classnames.default)(_fileUpload.default["progress-bar"], _fileUpload.default[progressBar]),
        style: {
          width: "".concat(progressPercentage, "%")
        }
      })), message ? _react.default.createElement("span", {
        className: (0, _classnames.default)(_fileUpload.default["file-upload-message"])
      }, message) : null));
    }
  }]);

  return FileUploadItem;
}(_react.Component);

var _default = FileUploadItem;
exports.default = _default;