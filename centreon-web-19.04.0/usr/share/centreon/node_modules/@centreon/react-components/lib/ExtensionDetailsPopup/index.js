"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _popup = _interopRequireDefault(require("../Popup/popup.scss"));

var _Popup = _interopRequireDefault(require("../Popup"));

var _Loader = _interopRequireDefault(require("../Loader"));

var _SliderContent = _interopRequireDefault(require("../Slider/SliderContent"));

var _IconContent = _interopRequireDefault(require("../Icon/IconContent"));

var _Title = _interopRequireDefault(require("../Title"));

var _Subtitle = _interopRequireDefault(require("../Subtitle"));

var _ButtonRegular = _interopRequireDefault(require("../Button/ButtonRegular"));

var _HorizontalLineRegular = _interopRequireDefault(require("../HorizontalLines/HorizontalLineRegular"));

var _Description = _interopRequireDefault(require("../Description"));

var _IconClose = _interopRequireDefault(require("../Icon/IconClose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var ExtensionDetailPopup =
/*#__PURE__*/
function (_React$Component) {
  _inherits(ExtensionDetailPopup, _React$Component);

  function ExtensionDetailPopup() {
    _classCallCheck(this, ExtensionDetailPopup);

    return _possibleConstructorReturn(this, _getPrototypeOf(ExtensionDetailPopup).apply(this, arguments));
  }

  _createClass(ExtensionDetailPopup, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          type = _this$props.type,
          onCloseClicked = _this$props.onCloseClicked,
          modalDetails = _this$props.modalDetails,
          onVersionClicked = _this$props.onVersionClicked,
          onDeleteClicked = _this$props.onDeleteClicked,
          onUpdateClicked = _this$props.onUpdateClicked,
          onInstallClicked = _this$props.onInstallClicked,
          loading = _this$props.loading;

      if (modalDetails === null) {
        return null;
      }

      return _react.default.createElement(_Popup.default, {
        popupType: "big"
      }, loading ? _react.default.createElement(_Loader.default, {
        fullContent: true
      }) : null, _react.default.createElement(_SliderContent.default, {
        type: type,
        images: modalDetails.images || []
      }, modalDetails.version.installed && modalDetails.version.outdated ? _react.default.createElement(_IconContent.default, {
        customClass: "content-icon-popup-wrapper",
        iconContentType: "update",
        iconContentColor: "orange",
        onClick: function onClick() {
          onUpdateClicked(modalDetails.id, modalDetails.type);
        }
      }) : null, modalDetails.version.installed ? _react.default.createElement(_IconContent.default, {
        customClass: "content-icon-popup-wrapper",
        iconContentType: "delete",
        iconContentColor: "red",
        onClick: function onClick() {
          onDeleteClicked(modalDetails.id, modalDetails.type);
        }
      }) : _react.default.createElement(_IconContent.default, {
        customClass: "content-icon-popup-wrapper",
        iconContentType: "add",
        iconContentColor: "green",
        onClick: function onClick() {
          onInstallClicked(modalDetails.id, modalDetails.type);
        }
      })), _react.default.createElement("div", {
        className: (0, _classnames.default)(_popup.default["popup-header"])
      }, _react.default.createElement(_Title.default, {
        label: modalDetails.title
      }), _react.default.createElement(_ButtonRegular.default, {
        style: {
          cursor: 'default'
        },
        label: (!modalDetails.version.installed ? 'Available ' : '') + modalDetails.version.available,
        buttonType: "regular",
        color: "blue"
      }), _react.default.createElement(_ButtonRegular.default, {
        label: modalDetails.stability,
        buttonType: "bordered",
        color: "gray",
        style: {
          margin: "15px",
          cursor: 'default'
        }
      })), _react.default.createElement(_HorizontalLineRegular.default, null), _react.default.createElement("div", {
        className: (0, _classnames.default)(_popup.default["popup-body"])
      }, modalDetails.last_update ? _react.default.createElement(_Description.default, {
        date: "Last update ".concat(modalDetails.last_update)
      }) : null, _react.default.createElement(_Description.default, {
        title: "Description:"
      }), _react.default.createElement(_Description.default, {
        text: modalDetails.description
      })), _react.default.createElement(_HorizontalLineRegular.default, null), _react.default.createElement("div", {
        className: (0, _classnames.default)(_popup.default["popup-footer"])
      }, _react.default.createElement(_Description.default, {
        note: modalDetails.release_note,
        link: true
      })), _react.default.createElement(_IconClose.default, {
        iconPosition: "icon-close-position-big",
        iconType: "big",
        onClick: onCloseClicked
      }));
    }
  }]);

  return ExtensionDetailPopup;
}(_react.default.Component);

var _default = ExtensionDetailPopup;
exports.default = _default;