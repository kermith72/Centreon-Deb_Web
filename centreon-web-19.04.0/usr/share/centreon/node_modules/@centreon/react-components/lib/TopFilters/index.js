"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _grid = _interopRequireDefault(require("../global-sass-files/_grid.scss"));

var _topFilters = _interopRequireDefault(require("./top-filters.scss"));

var _Wrapper = _interopRequireDefault(require("../Wrapper"));

var _SearchLive = _interopRequireDefault(require("../Search/SearchLive"));

var _Switcher = _interopRequireDefault(require("../Switcher"));

var _ButtonRegular = _interopRequireDefault(require("../Button/ButtonRegular"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var TopFilters =
/*#__PURE__*/
function (_Component) {
  _inherits(TopFilters, _Component);

  function TopFilters() {
    _classCallCheck(this, TopFilters);

    return _possibleConstructorReturn(this, _getPrototypeOf(TopFilters).apply(this, arguments));
  }

  _createClass(TopFilters, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          fullText = _this$props.fullText,
          switchers = _this$props.switchers,
          onChange = _this$props.onChange,
          icon = _this$props.icon;
      return _react.default.createElement("div", {
        className: _grid.default["container-gray"]
      }, _react.default.createElement("div", {
        className: _topFilters.default["filters-wrapper"]
      }, _react.default.createElement(_Wrapper.default, null, _react.default.createElement("div", {
        className: (0, _classnames.default)(_grid.default["container__row"])
      }, fullText ? _react.default.createElement("div", {
        className: (0, _classnames.default)(_grid.default["container__col-md-3"], _grid.default["container__col-xs-12"])
      }, _react.default.createElement(_SearchLive.default, {
        icon: fullText.icon,
        onChange: onChange,
        label: fullText.label,
        value: fullText.value,
        filterKey: fullText.filterKey
      })) : null, _react.default.createElement("div", {
        className: (0, _classnames.default)(_grid.default["container__row"])
      }, switchers ? switchers.map(function (switcherColumn, index) {
        return _react.default.createElement("div", {
          key: "switcherSubColumn".concat(index),
          className: _topFilters.default["switch-wrapper"]
        }, switcherColumn.map(function (_ref, i) {
          var customClass = _ref.customClass,
              switcherTitle = _ref.switcherTitle,
              switcherStatus = _ref.switcherStatus,
              button = _ref.button,
              label = _ref.label,
              buttonType = _ref.buttonType,
              color = _ref.color,
              onClick = _ref.onClick,
              filterKey = _ref.filterKey,
              value = _ref.value;
          return !button ? _react.default.createElement(_Switcher.default, _extends({
            key: "switcher".concat(index).concat(i),
            customClass: customClass
          }, switcherTitle ? {
            switcherTitle: switcherTitle
          } : {}, {
            switcherStatus: switcherStatus,
            filterKey: filterKey,
            onChange: onChange,
            value: value
          })) : _react.default.createElement("div", {
            key: "switcher".concat(index).concat(i),
            className: (0, _classnames.default)(_grid.default["container__col-sm-6"], _grid.default["container__col-xs-4"], _grid.default["center-vertical"], _grid.default["mt-1"], _topFilters.default["button-wrapper"])
          }, _react.default.createElement(_ButtonRegular.default, {
            key: "switcherButton".concat(index).concat(i),
            label: label,
            buttonType: buttonType,
            color: color,
            onClick: onClick
          }));
        }));
      }) : null)))));
    }
  }]);

  return TopFilters;
}(_react.Component);

var _default = TopFilters;
exports.default = _default;